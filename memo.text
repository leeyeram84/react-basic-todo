forEach를 이용하여 completed 업데이트
    const toggleCompleted = (id) => {
        const updatedTodos = [];

        todos.forEach((todo) => {
            if (todo.id === id) {
                const updatedTodo = {
                    id: todo.id,
                    text: todo.text,
                    completed: !todo.completed,
                };

                updatedTodos.push(updatedTodo);
            } else {
                updatedTodos.push(todo);
            }
        });

        setTodos(updatedTodos);
    };

className을 삼항 연산자로 하여 todo.completed의 상채가 true 일 경우 취소선 스타일 적용
    <span className={todo.completed ? "completedLine" : ""}>
        {todo.text} - {String(todo.completed)}
    </span>

className 을 동적으로 스타일링 할 수 있다.
-삼항 연산자 및 && 연산자 등을 사용하여 조건에 따라 span 태그를 자유롭게 스타일링 할 수 있다.

.삼항연산자
<span className={todo.completed ? "completedLine" : ""}>
{todo.text} - {String(todo.completed)}
</span>

.또 다른 표현법
{todo.completed ? (
    <span className="completedLine">
        {todo.text} - {String(todo.completed)}
    </span>) : (
    <span className="notCompletedLine">
        {todo.text} - {String(todo.completed)}
    </span>
)}

.&&연산자
{todo.complete === '1' && <span></span>}
{todo.complete === '3' && <span></span>}

.css 끼리는 글로벌스코프를 이용한다
=> 모듈스코프(.module.css) 이용